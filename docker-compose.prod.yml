services:
  db:
    image: postgres:15
    container_name: uralpromcenter_db_prod
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env.prod
    ports:
      - 5432:5432
    networks:
      - app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: uralpromcenter_app_prod_image
    container_name: uralpromcenter_app_prod
    env_file:
      - .env.prod
    depends_on:
      - db
    command: sh -c "sleep 10 && alembic upgrade head && gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - 8000:8000
    networks:
      - app_network

  react:
    image: klaxer/uralpromcenter_app_frontend_prod:latest
    container_name: uralpromcenter_app_frontend_prod
    volumes:
      - react_dist:/app/dist
    depends_on:
      - app
    ports:
      - 3001:3001
    networks:
      - app_network

  nginx:
    build: ./nginx
    container_name: uralpromcenter_nginx_prod
    ports:
      - 80:80
    volumes:
      - react_dist:/app/dist
    depends_on:
      - app
      - react
    networks:
      - app_network


  redis:
    image: redis:7
    container_name: uralpromcenter_redis_prod
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: always
    networks:
      - app_network

  celery:
    image: uralpromcenter_celery_prod
    build:
      context: .
    container_name: uralpromcenter_celery_prod
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
    env_file:
      - .env.docker
    depends_on:
      - redis
    networks:
      - app_network

volumes:
  postgresdata:
  redisdata:
  react_dist:

networks:
  app_network:
    driver: bridge