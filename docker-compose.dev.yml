version: '3.7'

services:
  db:
    image: postgres:15
    container_name: uralpromcenter_db_dev
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env.docker
    ports:
      - "6000:5432" 
    networks:
      - app_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: uralpromcenter_app_dev_image
    container_name: uralpromcenter_app_dev
    env_file:
      - .env.docker
    depends_on:
      - db
      - redis
    command: sh -c "sleep 15 && alembic upgrade head && gunicorn app.main:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000"
    ports:
      - "8000:8000" 
    networks:
      - app_network

  redis:
    image: redis:7
    container_name: uralpromcenter_redis_dev
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: always
    networks:
      - app_network

  celery:
    image: uralpromcenter_celery_dev
    build:
      context: .
    container_name: uralpromcenter_celery_dev
    command: sh -c "celery --app=app.tasks.celery:celery worker -l INFO"
    env_file:
      - .env.docker
    depends_on:
      - redis
    networks:
      - app_network

volumes:
  postgresdata:
    driver: local 
  redisdata:
    driver: local 

networks:
  app_network:
    driver: bridge
